// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mushka.Infrastructure.DataAccess.Database;

namespace Mushka.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(MushkaDbContext))]
    [Migration("20181106230038_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mushka.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Name = "Socks" },
                        new { Id = new Guid("0e7be1de-267c-4c0a-8ee9-aba0a267f27a"), Name = "Pack" },
                        new { Id = new Guid("b425d75b-2e72-45f0-a55d-3ba400051e5f"), Name = "Other" }
                    );
                });

            modelBuilder.Entity("Mushka.Domain.Entities.Delivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<decimal>("BankFee")
                        .HasColumnName("BankFee")
                        .HasColumnType("Money");

                    b.Property<decimal>("Cost")
                        .HasColumnName("Cost")
                        .HasColumnType("Money");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnName("DeliveryDate");

                    b.Property<int>("PaymentMethod")
                        .HasColumnName("PaymentMethod");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnName("RequestDate");

                    b.Property<decimal>("TransferFee")
                        .HasColumnName("TransferFee")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.ToTable("Deliveries");

                    b.HasData(
                        new { Id = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), BankFee = 222.00m, Cost = 41319.00m, DeliveryDate = new DateTime(2018, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), PaymentMethod = 3, RequestDate = new DateTime(2018, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), TransferFee = 940.00m },
                        new { Id = new Guid("32c74ef3-adfd-4723-a319-9b8984d1b7fb"), BankFee = 90.00m, Cost = 16500.00m, DeliveryDate = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), PaymentMethod = 3, RequestDate = new DateTime(2018, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), TransferFee = 90.00m },
                        new { Id = new Guid("b2d8b13b-aa82-4820-ba85-e23501869c3a"), BankFee = 110.00m, Cost = 39720.00m, DeliveryDate = new DateTime(2018, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), PaymentMethod = 3, RequestDate = new DateTime(2018, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), TransferFee = 810.00m }
                    );
                });

            modelBuilder.Entity("Mushka.Domain.Entities.DeliveryProduct", b =>
                {
                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("DeliveryId");

                    b.Property<Guid>("SizeId");

                    b.Property<decimal>("PriceForItem")
                        .HasColumnName("PriceForItem")
                        .HasColumnType("Money");

                    b.Property<int>("Quantity")
                        .HasColumnName("Quantity");

                    b.HasKey("ProductId", "DeliveryId", "SizeId");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("SizeId");

                    b.ToTable("DeliveryProducts");

                    b.HasData(
                        new { ProductId = new Guid("a9ab38d1-c2b2-4c50-9ab9-80335f4561f8"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), PriceForItem = 25.0m, Quantity = 39 },
                        new { ProductId = new Guid("a9ab38d1-c2b2-4c50-9ab9-80335f4561f8"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), PriceForItem = 25.0m, Quantity = 38 },
                        new { ProductId = new Guid("dfa69fa0-2df3-4254-95b7-f65eb4ed6c92"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), PriceForItem = 25.0m, Quantity = 52 },
                        new { ProductId = new Guid("dfa69fa0-2df3-4254-95b7-f65eb4ed6c92"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), PriceForItem = 25.0m, Quantity = 56 },
                        new { ProductId = new Guid("f9b055d3-5fd9-417f-b71d-0af81c821029"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), PriceForItem = 30.0m, Quantity = 53 },
                        new { ProductId = new Guid("f9b055d3-5fd9-417f-b71d-0af81c821029"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), PriceForItem = 30.0m, Quantity = 40 },
                        new { ProductId = new Guid("365510f0-fb1a-42cd-b249-5ad514bf2f33"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), PriceForItem = 25.0m, Quantity = 56 },
                        new { ProductId = new Guid("365510f0-fb1a-42cd-b249-5ad514bf2f33"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), PriceForItem = 25.0m, Quantity = 46 },
                        new { ProductId = new Guid("ba641024-d50a-4f9c-bfd9-a330fe12071e"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), PriceForItem = 25.0m, Quantity = 52 },
                        new { ProductId = new Guid("ba641024-d50a-4f9c-bfd9-a330fe12071e"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), PriceForItem = 25.0m, Quantity = 54 },
                        new { ProductId = new Guid("55386f8f-3234-42c0-a82a-65ea7dd50b28"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), PriceForItem = 25.0m, Quantity = 57 },
                        new { ProductId = new Guid("55386f8f-3234-42c0-a82a-65ea7dd50b28"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), PriceForItem = 25.0m, Quantity = 75 },
                        new { ProductId = new Guid("bddc1231-0952-4c6d-9a30-9de441cfa3a0"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 25.0m, Quantity = 50 },
                        new { ProductId = new Guid("bddc1231-0952-4c6d-9a30-9de441cfa3a0"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 25.0m, Quantity = 48 },
                        new { ProductId = new Guid("f869224c-80e6-43b6-94a4-2528ecd67a75"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 25.0m, Quantity = 53 },
                        new { ProductId = new Guid("f869224c-80e6-43b6-94a4-2528ecd67a75"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 25.0m, Quantity = 53 },
                        new { ProductId = new Guid("a9899cd5-9b2d-4241-8e28-0d1441933bad"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 25.0m, Quantity = 43 },
                        new { ProductId = new Guid("a9899cd5-9b2d-4241-8e28-0d1441933bad"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 25.0m, Quantity = 44 },
                        new { ProductId = new Guid("637b0ba2-f1d9-4bf6-b1c7-1bc685033b36"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 25.0m, Quantity = 57 },
                        new { ProductId = new Guid("637b0ba2-f1d9-4bf6-b1c7-1bc685033b36"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 25.0m, Quantity = 58 },
                        new { ProductId = new Guid("65801c7f-37f6-4452-a304-ceaafc940d08"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 20.0m, Quantity = 52 },
                        new { ProductId = new Guid("65801c7f-37f6-4452-a304-ceaafc940d08"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 20.0m, Quantity = 51 },
                        new { ProductId = new Guid("8636296d-e47c-4bb8-a6fd-e0cc01d4e27a"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 25.0m, Quantity = 53 },
                        new { ProductId = new Guid("8636296d-e47c-4bb8-a6fd-e0cc01d4e27a"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 25.0m, Quantity = 53 },
                        new { ProductId = new Guid("32ae1bae-c186-4e7c-a6af-d683e10d1480"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 25.0m, Quantity = 50 },
                        new { ProductId = new Guid("32ae1bae-c186-4e7c-a6af-d683e10d1480"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 25.0m, Quantity = 48 },
                        new { ProductId = new Guid("574f3353-0c6e-4148-a8ef-0db9559f3864"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 25.0m, Quantity = 48 },
                        new { ProductId = new Guid("574f3353-0c6e-4148-a8ef-0db9559f3864"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 25.0m, Quantity = 64 },
                        new { ProductId = new Guid("304af5df-1d03-40c3-af40-9c6259898f75"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 20.0m, Quantity = 60 },
                        new { ProductId = new Guid("304af5df-1d03-40c3-af40-9c6259898f75"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 20.0m, Quantity = 57 },
                        new { ProductId = new Guid("b62555e5-e51b-41e2-9bf8-6a750edc0d8a"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 20.0m, Quantity = 65 },
                        new { ProductId = new Guid("b62555e5-e51b-41e2-9bf8-6a750edc0d8a"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 20.0m, Quantity = 66 },
                        new { ProductId = new Guid("6bb026fc-ae0f-4a87-b0e3-845b3d55e05b"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), PriceForItem = 20.0m, Quantity = 54 },
                        new { ProductId = new Guid("6bb026fc-ae0f-4a87-b0e3-845b3d55e05b"), DeliveryId = new Guid("4e50f00d-4fd9-4dfe-8d56-18a2399dd7b6"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), PriceForItem = 20.0m, Quantity = 62 }
                    );
                });

            modelBuilder.Entity("Mushka.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnName("OrderDate");

                    b.Property<int>("PaymentMethod");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mushka.Domain.Entities.OrderProduct", b =>
                {
                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("OrderId");

                    b.Property<Guid>("SizeId");

                    b.Property<decimal>("PriceForItem")
                        .HasColumnName("PriceForItem")
                        .HasColumnType("Money");

                    b.Property<int>("Quantity")
                        .HasColumnName("Quantity");

                    b.HasKey("ProductId", "OrderId", "SizeId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("Mushka.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<Guid>("CategoryId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("CreatedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = new Guid("a9ab38d1-c2b2-4c50-9ab9-80335f4561f8"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "AIR001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Airplane" },
                        new { Id = new Guid("dfa69fa0-2df3-4254-95b7-f65eb4ed6c92"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "BIK001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Bike" },
                        new { Id = new Guid("f9b055d3-5fd9-417f-b71d-0af81c821029"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "MOT001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Motobike" },
                        new { Id = new Guid("365510f0-fb1a-42cd-b249-5ad514bf2f33"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "DRT001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Dartik" },
                        new { Id = new Guid("ba641024-d50a-4f9c-bfd9-a330fe12071e"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "DRV001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Shturmovik" },
                        new { Id = new Guid("55386f8f-3234-42c0-a82a-65ea7dd50b28"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "DRJ001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Yoda" },
                        new { Id = new Guid("bddc1231-0952-4c6d-9a30-9de441cfa3a0"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "BDM001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Badminton" },
                        new { Id = new Guid("f869224c-80e6-43b6-94a4-2528ecd67a75"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "BER001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Beer" },
                        new { Id = new Guid("a9899cd5-9b2d-4241-8e28-0d1441933bad"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "CAM001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Smile" },
                        new { Id = new Guid("637b0ba2-f1d9-4bf6-b1c7-1bc685033b36"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "CFF001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "CoffeeOk" },
                        new { Id = new Guid("65801c7f-37f6-4452-a304-ceaafc940d08"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "DGY001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Avo-avocado" },
                        new { Id = new Guid("8636296d-e47c-4bb8-a6fd-e0cc01d4e27a"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "DRW001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Beboss dot" },
                        new { Id = new Guid("32ae1bae-c186-4e7c-a6af-d683e10d1480"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "DOW001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Apelsinka" },
                        new { Id = new Guid("574f3353-0c6e-4148-a8ef-0db9559f3864"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "GAL001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Spaceman" },
                        new { Id = new Guid("304af5df-1d03-40c3-af40-9c6259898f75"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "SWY001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Limono" },
                        new { Id = new Guid("b62555e5-e51b-41e2-9bf8-6a750edc0d8a"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "SWR001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Cherry" },
                        new { Id = new Guid("6bb026fc-ae0f-4a87-b0e3-845b3d55e05b"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "SBY001", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Navy" },
                        new { Id = new Guid("a6f3cc9a-bd32-49f5-8a5e-cad1262298f8"), CategoryId = new Guid("88cd0f34-9d4a-4e45-be97-8899a97fb82c"), Code = "", CreatedOn = new DateTime(2018, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "" }
                    );
                });

            modelBuilder.Entity("Mushka.Domain.Entities.ProductSize", b =>
                {
                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("SizeId");

                    b.Property<int>("Quantity")
                        .HasColumnName("Quantity");

                    b.HasKey("ProductId", "SizeId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSizes");

                    b.HasData(
                        new { ProductId = new Guid("a9ab38d1-c2b2-4c50-9ab9-80335f4561f8"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), Quantity = 0 },
                        new { ProductId = new Guid("a9ab38d1-c2b2-4c50-9ab9-80335f4561f8"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), Quantity = 0 },
                        new { ProductId = new Guid("dfa69fa0-2df3-4254-95b7-f65eb4ed6c92"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), Quantity = 0 },
                        new { ProductId = new Guid("dfa69fa0-2df3-4254-95b7-f65eb4ed6c92"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), Quantity = 0 },
                        new { ProductId = new Guid("f9b055d3-5fd9-417f-b71d-0af81c821029"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), Quantity = 0 },
                        new { ProductId = new Guid("f9b055d3-5fd9-417f-b71d-0af81c821029"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), Quantity = 0 },
                        new { ProductId = new Guid("365510f0-fb1a-42cd-b249-5ad514bf2f33"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), Quantity = 0 },
                        new { ProductId = new Guid("365510f0-fb1a-42cd-b249-5ad514bf2f33"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), Quantity = 0 },
                        new { ProductId = new Guid("ba641024-d50a-4f9c-bfd9-a330fe12071e"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), Quantity = 0 },
                        new { ProductId = new Guid("ba641024-d50a-4f9c-bfd9-a330fe12071e"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), Quantity = 0 },
                        new { ProductId = new Guid("55386f8f-3234-42c0-a82a-65ea7dd50b28"), SizeId = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), Quantity = 0 },
                        new { ProductId = new Guid("55386f8f-3234-42c0-a82a-65ea7dd50b28"), SizeId = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), Quantity = 0 },
                        new { ProductId = new Guid("bddc1231-0952-4c6d-9a30-9de441cfa3a0"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("bddc1231-0952-4c6d-9a30-9de441cfa3a0"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 },
                        new { ProductId = new Guid("f869224c-80e6-43b6-94a4-2528ecd67a75"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("f869224c-80e6-43b6-94a4-2528ecd67a75"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 },
                        new { ProductId = new Guid("a9899cd5-9b2d-4241-8e28-0d1441933bad"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("a9899cd5-9b2d-4241-8e28-0d1441933bad"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 },
                        new { ProductId = new Guid("637b0ba2-f1d9-4bf6-b1c7-1bc685033b36"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("637b0ba2-f1d9-4bf6-b1c7-1bc685033b36"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 },
                        new { ProductId = new Guid("65801c7f-37f6-4452-a304-ceaafc940d08"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("65801c7f-37f6-4452-a304-ceaafc940d08"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 },
                        new { ProductId = new Guid("8636296d-e47c-4bb8-a6fd-e0cc01d4e27a"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("8636296d-e47c-4bb8-a6fd-e0cc01d4e27a"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 },
                        new { ProductId = new Guid("32ae1bae-c186-4e7c-a6af-d683e10d1480"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("32ae1bae-c186-4e7c-a6af-d683e10d1480"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 },
                        new { ProductId = new Guid("574f3353-0c6e-4148-a8ef-0db9559f3864"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("574f3353-0c6e-4148-a8ef-0db9559f3864"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 },
                        new { ProductId = new Guid("304af5df-1d03-40c3-af40-9c6259898f75"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("304af5df-1d03-40c3-af40-9c6259898f75"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 },
                        new { ProductId = new Guid("b62555e5-e51b-41e2-9bf8-6a750edc0d8a"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("b62555e5-e51b-41e2-9bf8-6a750edc0d8a"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 },
                        new { ProductId = new Guid("6bb026fc-ae0f-4a87-b0e3-845b3d55e05b"), SizeId = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Quantity = 0 },
                        new { ProductId = new Guid("6bb026fc-ae0f-4a87-b0e3-845b3d55e05b"), SizeId = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Quantity = 0 }
                    );
                });

            modelBuilder.Entity("Mushka.Domain.Entities.Size", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Sizes");

                    b.HasData(
                        new { Id = new Guid("eccef8a9-2c41-4270-9001-d0eb7e21b9e2"), Name = "36-39" },
                        new { Id = new Guid("2dfa21ef-5eed-462f-b5e5-06ee31281ba2"), Name = "41-45" },
                        new { Id = new Guid("fb8356a5-1629-4f9f-9b51-3d40e0e55f84"), Name = "39-42" },
                        new { Id = new Guid("6e519491-8fd8-45f2-992e-270b01f25971"), Name = "43-46" }
                    );
                });

            modelBuilder.Entity("Mushka.Domain.Entities.DeliveryProduct", b =>
                {
                    b.HasOne("Mushka.Domain.Entities.Delivery", "Delivery")
                        .WithMany("Products")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mushka.Domain.Entities.Product", "Product")
                        .WithMany("Deliveries")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mushka.Domain.Entities.Size", "Size")
                        .WithMany("DeliveryProducts")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mushka.Domain.Entities.OrderProduct", b =>
                {
                    b.HasOne("Mushka.Domain.Entities.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mushka.Domain.Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mushka.Domain.Entities.Size", "Size")
                        .WithMany("OrderProducts")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mushka.Domain.Entities.Product", b =>
                {
                    b.HasOne("Mushka.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mushka.Domain.Entities.ProductSize", b =>
                {
                    b.HasOne("Mushka.Domain.Entities.Product", "Product")
                        .WithMany("Sizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mushka.Domain.Entities.Size", "Size")
                        .WithMany("Products")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
